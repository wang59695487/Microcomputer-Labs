C51 COMPILER V9.57.0.0   KEY                                                               02/11/2020 20:59:02 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN ..\OBJ\key.obj
COMPILER INVOKED BY: D:\WORK\keil-v5\C51\BIN\C51.EXE ..\HARDWARE\src\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HARDWARE\i
                    -nc) DEBUG OBJECTEXTEND PRINT(.\key.lst) OBJECT(..\OBJ\key.obj)

line level    source

   1          #include"key.h"
   2          #include"51it.h"
   3          #include"ds1302.h"
   4          #include"lcd.h"
   5          
   6          /*******************************************************************************
   7          * 函 数 名         : KEY_Scan
   8          * 函数功能                 : 检测有按键按下并读取键值
   9          * 输    入         : 无
  10          * 输    出         : 无
  11          * 模式             : mode=1，连按     mode=0，单按
  12          *******************************************************************************/
  13          char KEY_Scan(char mode)
  14          {
  15   1      
  16   1              static char keyl1=1;
  17   1              static char keyl2=1;
  18   1              static char keyl3=1;
  19   1      
  20   1              //第1列扫描
  21   1              KEY_L1_SetL;
  22   1              KEY_L2_SetH;
  23   1              KEY_L3_SetH;
  24   1              if(keyl1==1&&(KEY_H1==0||KEY_H2==0||KEY_H3==0))
  25   1              {
  26   2                      Delay_ms(10);
  27   2                      keyl1=0;
  28   2                      if(KEY_H1==0)
  29   2                      {
  30   3                              return KEY1_PRESS;
  31   3                      }
  32   2                      else if(KEY_H2==0)
  33   2                      {
  34   3                              return KEY4_PRESS;
  35   3                      }
  36   2                      else if(KEY_H3==0)
  37   2                      {
  38   3                              return KEY7_PRESS;
  39   3                      }
  40   2              }
  41   1              else if(KEY_H1==1&&KEY_H2==1&&KEY_H3==1)
  42   1              {
  43   2                      keyl1=1;
  44   2              }
  45   1              if(mode)
  46   1                      keyl1=1;
  47   1      
  48   1      
  49   1              //第2列扫描
  50   1              KEY_L2_SetL;
  51   1              KEY_L1_SetH;
  52   1              KEY_L3_SetH;
  53   1              if(keyl2==1&&(KEY_H1==0||KEY_H2==0||KEY_H3==0))
  54   1              {
C51 COMPILER V9.57.0.0   KEY                                                               02/11/2020 20:59:02 PAGE 2   

  55   2                      Delay_ms(10);
  56   2                      keyl2=0;
  57   2                      if(KEY_H1==0)
  58   2                      {
  59   3                              return KEY2_PRESS;
  60   3                      }
  61   2                      else if(KEY_H2==0)
  62   2                      {
  63   3                              return KEY5_PRESS;
  64   3                      }
  65   2                      else if(KEY_H3==0)
  66   2                      {
  67   3                              return KEY8_PRESS;
  68   3                      }
  69   2              }
  70   1              else if(KEY_H1==1&&KEY_H2==1&&KEY_H3==1)
  71   1              {
  72   2                      keyl2=1;
  73   2              }
  74   1              if(mode)
  75   1                      keyl2=1;
  76   1      
  77   1      
  78   1              //第3列扫描
  79   1              KEY_L3_SetL;
  80   1              KEY_L1_SetH;
  81   1              KEY_L2_SetH;
  82   1              if(keyl3==1&&(KEY_H1==0||KEY_H2==0||KEY_H3==0))
  83   1              {
  84   2                      Delay_ms(10);
  85   2                      keyl3=0;
  86   2                      if(KEY_H1==0)
  87   2                      {
  88   3                              return KEY3_PRESS;
  89   3                      }
  90   2                      else if(KEY_H2==0)
  91   2                      {
  92   3                              return KEY6_PRESS;
  93   3                      }
  94   2                      else if(KEY_H3==0)
  95   2                      {
  96   3                              return KEY9_PRESS;
  97   3                      }
  98   2              }
  99   1              else if(KEY_H1==1&&KEY_H2==1&&KEY_H3==1)
 100   1              {
 101   2                      keyl3=1;
 102   2              }
 103   1              if(mode)
 104   1                      keyl3=1;
 105   1      
 106   1              return KEY_UNPRESS;
 107   1      }
 108          
 109          void KEY_Press(void)
 110          {
 111   1      
 112   1              key=KEY_Scan(1);
 113   1              switch(key)
 114   1              {
 115   2                      case KEY1_PRESS: 
 116   2                               LED=~LED;
C51 COMPILER V9.57.0.0   KEY                                                               02/11/2020 20:59:02 PAGE 3   

 117   2                               SetState=~SetState;
 118   2                               SetPlace=0;
 119   2                               Ds1302Init();  
 120   2                      break;
 121   2                      
 122   2                      case KEY2_PRESS:
 123   2                              LED=~LED;
 124   2                              if(SetState)
 125   2                              {
 126   3                                       TIME[SetPlace]++;
 127   3                                       if((TIME[SetPlace]&0x0f)>9)                                     //换成BCD码。
 128   3                                       {
 129   4                                               TIME[SetPlace]=TIME[SetPlace]+6;
 130   4                                       }
 131   3                                       if((TIME[SetPlace]>=0x60)&&(SetPlace<2))               //分秒只能到59
 132   3                                       {
 133   4                                               TIME[SetPlace]=0;
 134   4                                       }
 135   3                                       if((TIME[SetPlace]>=0x24)&&(SetPlace==2))              //小时只能到23
 136   3                                       {
 137   4                                               TIME[SetPlace]=0;
 138   4                                       }
 139   3                                       if((TIME[SetPlace]>=0x32)&&(SetPlace==3))              //日只能到31
 140   3                                       {
 141   4                                               TIME[SetPlace]=1;      
 142   4                                       }
 143   3                                       if((TIME[SetPlace]>=0x13)&&(SetPlace==4))              //月只能到12
 144   3                                       {
 145   4                                               TIME[SetPlace]=1;
 146   4                                       }      
 147   3                                       if((TIME[SetPlace]>=0x08)&&(SetPlace==5))              //周只能到7
 148   3                                       {
 149   4                                               TIME[SetPlace]=1;
 150   4                                       }
 151   3                              }
 152   2                              else
 153   2                              if(Alarm_SetState)
 154   2                              {
 155   3                                       ALARM[SetPlace]++;
 156   3                                       if((ALARM[SetPlace]&0x0f)>9)                                    //换成BCD码。
 157   3                                       {
 158   4                                               ALARM[SetPlace]=ALARM[SetPlace]+6;
 159   4                                       }
 160   3                                       if((ALARM[SetPlace]>=0x60)&&(SetPlace<2))              //分秒只能到59
 161   3                                       {
 162   4                                               ALARM[SetPlace]=0;
 163   4                                       }
 164   3                                       if((ALARM[SetPlace]>=0x24)&&(SetPlace==2))             //小时只能到23
 165   3                                       {
 166   4                                               ALARM[SetPlace]=0;
 167   4                                       }
 168   3                                       if((ALARM[SetPlace]>=0x32)&&(SetPlace==3))             //日只能到31
 169   3                                       {
 170   4                                               ALARM[SetPlace]=1;     
 171   4                                       }
 172   3                                       if((ALARM[SetPlace]>=0x13)&&(SetPlace==4))             //月只能到12
 173   3                                       {
 174   4                                               ALARM[SetPlace]=1;
 175   4                                       }      
 176   3                                       if((ALARM[SetPlace]>=0x08)&&(SetPlace==5))             //周只能到7
 177   3                                       {
 178   4                                               ALARM[SetPlace]=1;
C51 COMPILER V9.57.0.0   KEY                                                               02/11/2020 20:59:02 PAGE 4   

 179   4                                       }
 180   3                              }
 181   2                      break;
 182   2                      
 183   2                      case KEY3_PRESS:
 184   2                               LED=~LED;
 185   2                              if(SetState)
 186   2                              {
 187   3                                       TIME[SetPlace]--;
 188   3                                       if((TIME[SetPlace]&0x0f)>9)                                     //换成BCD码。
 189   3                                       {
 190   4                                               TIME[SetPlace]=TIME[SetPlace]-6;
 191   4                                       }
 192   3                                       if((TIME[SetPlace]>=0x60)&&(SetPlace<2))               //分秒只能到59
 193   3                                       {
 194   4                                               TIME[SetPlace]=0x59;
 195   4                                       }
 196   3                                       if((TIME[SetPlace]>=0x24)&&(SetPlace==2))              //小时只能到23
 197   3                                       {
 198   4                                               TIME[SetPlace]=0x23;
 199   4                                       }
 200   3                                       if((TIME[SetPlace]>=0x32 || TIME[SetPlace]==0)&&(SetPlace==3))         //日只能到31
 201   3                                       {
 202   4                                               TIME[SetPlace]=0x31;   
 203   4                                       }
 204   3                                       if((TIME[SetPlace]>=0x13 || TIME[SetPlace]==0)&&(SetPlace==4))         //月只能到12
 205   3                                       {
 206   4                                               TIME[SetPlace]=0x12;
 207   4                                       }      
 208   3                                       if((TIME[SetPlace]>=0x08)&&(SetPlace==5))              //周只能到7
 209   3                                       {
 210   4                                               TIME[SetPlace]=0x7;
 211   4                                       }
 212   3                              }
 213   2                              else
 214   2                              if(Alarm_SetState)
 215   2                              {
 216   3                                       ALARM[SetPlace]--;
 217   3                                       if((ALARM[SetPlace]&0x0f)>9)                                    //换成BCD码。
 218   3                                       {
 219   4                                               ALARM[SetPlace]=ALARM[SetPlace]-6;
 220   4                                       }
 221   3                                       if((ALARM[SetPlace]>=0x60)&&(SetPlace<2))              //分秒只能到59
 222   3                                       {
 223   4                                               ALARM[SetPlace]=0x59;
 224   4                                       }
 225   3                                       if((ALARM[SetPlace]>=0x24)&&(SetPlace==2))             //小时只能到23
 226   3                                       {
 227   4                                               ALARM[SetPlace]=0x23;
 228   4                                       }
 229   3                                       if((ALARM[SetPlace]>=0x32)&&(SetPlace==3))             //日只能到31
 230   3                                       {
 231   4                                               ALARM[SetPlace]=0x31;  
 232   4                                       }
 233   3                                       if((ALARM[SetPlace]>=0x13)&&(SetPlace==4))             //月只能到12
 234   3                                       {
 235   4                                               ALARM[SetPlace]=0x12;
 236   4                                       }      
 237   3                                       if((ALARM[SetPlace]>=0x08)&&(SetPlace==5))             //周只能到7
 238   3                                       {
 239   4                                               ALARM[SetPlace]=0x7;
 240   4                                       }
C51 COMPILER V9.57.0.0   KEY                                                               02/11/2020 20:59:02 PAGE 5   

 241   3                               }
 242   2                      break;
 243   2                              
 244   2                      case KEY4_PRESS:
 245   2                               LED=~LED;
 246   2      //                       if(SetState)
 247   2      //                       {
 248   2                                        SetPlace++;
 249   2                                        if(SetPlace>=7)
 250   2                                        SetPlace=0;
 251   2      //                       }      
 252   2      //                      else
 253   2      //                      if(Alarm_SetState)
 254   2      //                      {       
 255   2      //                                SetPlace++;
 256   2      //                                if(SetPlace>=7)
 257   2      //                                SetPlace=0;                   
 258   2      //                      }                
 259   2                      break;
 260   2                               
 261   2                      
 262   2                      case KEY5_PRESS: 
 263   2                                LED=~LED;
 264   2                                LcdWriteCom(0x01);  //清屏
 265   2                                LCD_MODE++;
 266   2                            if(LCD_MODE>=4)
 267   2                                {
 268   3                                      LCD_MODE=TIME_MODE;
 269   3                                }
 270   2                      break;
 271   2                      
 272   2                      case KEY6_PRESS:
 273   2                                LED=~LED;
 274   2                                if(LCD_MODE==ALARM_MODE)
 275   2                                {
 276   3                                      Alarm_SetState=~Alarm_SetState;
 277   3                                      SetPlace=0;
 278   3                                      LcdWriteCom(0x8E+0X40);
 279   3                                      if(Alarm_SetState)
 280   3                                      LcdWriteData('O');
 281   3                                      else
 282   3                                      LcdWriteData('C');
 283   3                                      break;
 284   3                                } 
 285   2                                
 286   2                      
 287   2                      
 288   2                      
 289   2                      
 290   2                      case KEY7_PRESS: 
 291   2                                LED=~LED;
 292   2                      break;
 293   2                      
 294   2                      case KEY8_PRESS:
 295   2                                LED=~LED;
 296   2                      break;
 297   2                      
 298   2                      case KEY9_PRESS: 
 299   2                                LED=~LED;
 300   2                      break;
 301   2                      
 302   2                      
C51 COMPILER V9.57.0.0   KEY                                                               02/11/2020 20:59:02 PAGE 6   

 303   2              }
 304   1      
 305   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    873    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
